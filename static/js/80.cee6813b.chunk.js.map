{"version":3,"file":"static/js/80.cee6813b.chunk.js","mappings":"4PACA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAmG,mCAAnG,EAA6I,yBAA7I,EAA6K,yB,SCI9J,SAASA,IAAc,IAAD,IACjC,GAA0BC,EAAAA,EAAAA,IAAgB,KAA1C,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CC,EAAAA,EAAAA,UAAQ,UAACC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,iBAAxC,QAAqD,IAAvG,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAU,UAAGV,EAAMW,IAAI,YAAb,QAAqB,GAC/BC,GAAiBC,EAAAA,EAAAA,MAUjBC,EAAa,mCAAG,WAAOJ,GAAP,2IAGGK,EAAAA,EAAAA,IAAA,UAHH,4CAGG,2DAAwEL,IAH3E,cAGdM,EAHc,OAIlBP,EAAiBO,EAASC,KAAKC,SACK,IAAjCF,EAASC,KAAKC,QAAQC,QAAeC,MAAM,8CAC9Cd,aAAae,QAAQ,QAASlB,KAAKmB,UAAUN,EAASC,KAAKC,UANzC,kBAOXV,GAPW,kCASTe,QAAQC,IAAR,MATS,0DAAH,sDAoBnB,OACI,4BACI,kBAAOC,UAAWC,EAAUC,SA9Bf,SAACC,GAClBA,EAAEC,iBACqB,KAAnBD,EAAEE,OAAOC,OACTX,MAAM,2BAEVN,EAAcJ,EACjB,EAwBO,WACA,kBAAOe,UAAWC,EAAWM,KAAK,OAC3BC,SAXS,SAACC,GACrB,GAA2B,KAAvBA,EAAMJ,OAAOC,MACd,OAAO9B,EAAS,CAAC,GAEpBA,EAAS,CAAEkC,EAAGD,EAAMJ,OAAOC,OAC9B,EAOcA,MAAQrB,KACf,mBAAQe,UAAWC,EAAoBM,KAAK,SAA5C,wBAEA,wBACKxB,EAAc4B,KAAI,SAAAC,GAAI,OACnB,eAAIZ,UAAWC,EAAf,UACI,UAAC,KAAD,CAAMD,UAAWC,EAAUY,GAAE,UAAKD,EAAKE,IAAMC,MAAO5B,EAApD,UAAqEyB,EAAKI,KAAMJ,EAAKK,UAD3DL,EAAKE,GADhB,QAQtC,C","sources":["webpack://react-homework-template/./src/components/Pages/MoviesPage.module.css?bb15","components/Pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__O1Xyl\",\"input\":\"MoviesPage_input__tuxv0\",\"button__search\":\"MoviesPage_button__search__vMmG6\",\"link\":\"MoviesPage_link__E85WN\",\"item\":\"MoviesPage_item__sQVxl\"};","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport css from '../Pages/MoviesPage.module.css'\n\nexport default function MoviesPage() {\n    const [query, setQuery] = useSearchParams('q');\n    const [searchedFilms, setSearchedFilms] = useState(JSON.parse(window.localStorage.getItem('films')) ?? []);\n    const queryInput = query.get('q') ?? '';\n    const locationMovies = useLocation();\n       \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (e.target.value === '') {\n            alert(\"Enter a word for search\")\n        }\n        axiosResponse(queryInput); \n    }\n\n    const axiosResponse = async (queryInput) => {\n    const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n    try {\n      const response = await axios.get(`${BASE_URL}?api_key=9dc8cf1c3b797577de272ea272eaf078&query=${queryInput}`);\n        setSearchedFilms(response.data.results);\n        if(response.data.results.length === 0){ alert('Sorry, there are no films for your request')}\n        localStorage.setItem('films', JSON.stringify(response.data.results));\n        return searchedFilms;\n    }\n    catch(error){console.log(error)}\n    \n    }\n\n    const updateQueryString=(event)=> {\n        if (event.target.value === '') {\n           return setQuery({});\n        }\n        setQuery({ q: event.target.value });        \n    }\n    \n    return (\n        <div>\n            <form  className={css.form} onSubmit={ handleSubmit }> \n            <input className={css.input} type=\"text\"\n                   onChange={updateQueryString}\n                   value={ queryInput} />\n            <button className={css.button__search} type=\"submit\">Search</button>\n            </form>\n            <ul>\n                {searchedFilms.map(film =>\n                    <li className={css.item} key={film.id}>\n                        <Link className={css.link} to={`${film.id}`} state={locationMovies}>{film.name}{film.title}\n                        </Link>\n                    </li>)}\n            </ul>\n        </div>\n    )\n}\n\n"],"names":["MoviesPage","useSearchParams","query","setQuery","useState","JSON","parse","window","localStorage","getItem","searchedFilms","setSearchedFilms","queryInput","get","locationMovies","useLocation","axiosResponse","axios","response","data","results","length","alert","setItem","stringify","console","log","className","css","onSubmit","e","preventDefault","target","value","type","onChange","event","q","map","film","to","id","state","name","title"],"sourceRoot":""}